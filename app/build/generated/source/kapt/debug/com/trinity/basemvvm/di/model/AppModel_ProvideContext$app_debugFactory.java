// Generated by Dagger (https://dagger.dev).
package com.trinity.basemvvm.di.model;

import android.app.Application;
import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModel_ProvideContext$app_debugFactory implements Factory<Context> {
  private final AppModel module;

  private final Provider<Application> applicationProvider;

  public AppModel_ProvideContext$app_debugFactory(AppModel module,
      Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public Context get() {
    return provideContext$app_debug(module, applicationProvider.get());
  }

  public static AppModel_ProvideContext$app_debugFactory create(AppModel module,
      Provider<Application> applicationProvider) {
    return new AppModel_ProvideContext$app_debugFactory(module, applicationProvider);
  }

  public static Context provideContext$app_debug(AppModel instance, Application application) {
    return Preconditions.checkNotNullFromProvides(instance.provideContext$app_debug(application));
  }
}
