// Generated by Dagger (https://dagger.dev).
package com.trinity.basemvvm.di.model;

import androidx.lifecycle.ViewModel;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import java.util.Map;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ViewModelFactory_Factory implements Factory<ViewModelFactory> {
  private final Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> viewModelsMapProvider;

  public ViewModelFactory_Factory(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> viewModelsMapProvider) {
    this.viewModelsMapProvider = viewModelsMapProvider;
  }

  @Override
  public ViewModelFactory get() {
    return newInstance(viewModelsMapProvider.get());
  }

  public static ViewModelFactory_Factory create(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> viewModelsMapProvider) {
    return new ViewModelFactory_Factory(viewModelsMapProvider);
  }

  public static ViewModelFactory newInstance(
      Map<Class<? extends ViewModel>, Provider<ViewModel>> viewModelsMap) {
    return new ViewModelFactory(viewModelsMap);
  }
}
