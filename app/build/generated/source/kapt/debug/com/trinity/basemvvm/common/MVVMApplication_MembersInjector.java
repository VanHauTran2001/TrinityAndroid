// Generated by Dagger (https://dagger.dev).
package com.trinity.basemvvm.common;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MVVMApplication_MembersInjector implements MembersInjector<MVVMApplication> {
  private final Provider<DispatchingAndroidInjector<Object>> androidDispatchingInjectorProvider;

  public MVVMApplication_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidDispatchingInjectorProvider) {
    this.androidDispatchingInjectorProvider = androidDispatchingInjectorProvider;
  }

  public static MembersInjector<MVVMApplication> create(
      Provider<DispatchingAndroidInjector<Object>> androidDispatchingInjectorProvider) {
    return new MVVMApplication_MembersInjector(androidDispatchingInjectorProvider);
  }

  @Override
  public void injectMembers(MVVMApplication instance) {
    injectAndroidDispatchingInjector(instance, androidDispatchingInjectorProvider.get());
  }

  @InjectedFieldSignature("com.trinity.basemvvm.common.MVVMApplication.androidDispatchingInjector")
  public static void injectAndroidDispatchingInjector(MVVMApplication instance,
      DispatchingAndroidInjector<Object> androidDispatchingInjector) {
    instance.androidDispatchingInjector = androidDispatchingInjector;
  }
}
